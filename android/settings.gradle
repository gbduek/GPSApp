pluginManagement {
    def reactNativeGradlePlugin = new File(
        providers.exec {
            workingDir(rootDir)
            commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
        }.standardOutput.asText.get().trim()
    ).getParentFile().absolutePath
    includeBuild(reactNativeGradlePlugin)

    def expoPluginsPath = new File(
        providers.exec {
            workingDir(rootDir)
            commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
        }.standardOutput.asText.get().trim(),
        "../android/expo-gradle-plugin"
    ).absolutePath
    includeBuild(expoPluginsPath)
}

plugins {
    id("com.facebook.react.settings")
    id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
        ex.autolinkLibrariesFromCommand()
    } else {
        ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
    }
}

expoAutolinking.useExpoModules()
expoAutolinking.useExpoVersionCatalog()

rootProject.name = 'GPS MED'

include ':app'

// Only include real local modules (Samsung Health)
include ':react-native-samsung-health'
project(':react-native-samsung-health').projectDir = new File(rootDir, 'custom_modules/react-native-samsung-health-main/android')

// Do NOT include npm modules like reanimated, async-storage, etc.
// Expo autolinking handles them automatically

includeBuild(expoAutolinking.reactNativeGradlePlugin)
